# Nginx Configuration for AI Medical Diagnosis Platform
# Windows Network Deployment

events {
    worker_connections 1024;
}

http {
    include       "./mime.types";
    default_type  application/octet-stream;
    
    # Temporary directories
    client_body_temp_path C:/nginx/temp/client_body_temp;
    proxy_temp_path C:/nginx/temp/proxy_temp;
    fastcgi_temp_path C:/nginx/temp/fastcgi_temp;
    uwsgi_temp_path C:/nginx/temp/uwsgi_temp;
    scgi_temp_path C:/nginx/temp/scgi_temp;
    
    # Logging
    access_log C:/nginx/logs/access.log;
    error_log C:/nginx/logs/error.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json application/xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Upstream Flask application
    upstream ai_medical_app {
        server 127.0.0.1:5000;
        # Add more servers for load balancing if needed
        # server 127.0.0.1:5001;
        # server 127.0.0.1:5002;
    }
    
    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name _;  # Accept all hostnames/IPs
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Max upload size for medical images
        client_max_body_size 100M;
        
        # Static files (served directly by nginx)
        location /static/ {
            alias app/WEBPAGE/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri $uri/ =404;
        }
        
        # Additional static file locations
        location ~ \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root app/WEBPAGE;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # Favicon
        location /favicon.ico {
            alias app/WEBPAGE/static/images/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://ai_medical_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # File uploads with rate limiting
        location /upload {
            limit_req zone=upload burst=5 nodelay;
            proxy_pass http://ai_medical_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # Socket.IO support for real-time features
        location /socket.io/ {
            proxy_pass http://ai_medical_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://ai_medical_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }
        
        # Main application
        location / {
            proxy_pass http://ai_medical_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Handle timeouts gracefully
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 200 '<!DOCTYPE html><html><head><title>AI Medical Platform - Temporary Error</title></head><body style="font-family:Arial;text-align:center;padding:50px;"><h1>üè• AI Medical Platform</h1><p>The service is temporarily unavailable. Please try again in a moment.</p><p><a href="/">Return to Home</a></p></body></html>';
            add_header Content-Type text/html;
        }
    }
    
    # HTTPS redirect (uncomment if you have SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name _;
    #     
    #     ssl_certificate /path/to/certificate.crt;
    #     ssl_certificate_key /path/to/private.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     
    #     # Same location blocks as above
    # }
}